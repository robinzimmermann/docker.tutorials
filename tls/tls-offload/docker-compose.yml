version: '2'

services:

  tcpdump:
    image: corfr/tcpdump
    network_mode: "host"
    volumes:
      - ./tcpdump:/data
    command: ["-i", "any", "-w", "/data/dump.pcap"]

  certs:

    build: https://github.com/robinzimmermann/docker.tutorials.git#certs:tls/cert-generator
    volumes:
      - myx509:/x509
    command: [
        "server",
        "--root-ca",             "root-ca",
        "--root-ca-password",    "rootpass",
        "--signing-ca",          "signing-ca",
        "--signing-ca-password", "signingpass",
        "--days",                "1"]

  gateway1.example.net:
    image: kaazing/enterprise-gateway:latest
    networks:
      mynet:
    volumes:
      - ./gateway/gateway-config.xml:/kaazing-gateway/conf/gateway-config.xml:ro
      - ./gateway/log4j-config.xml:/kaazing-gateway/conf/log4j-config.xml:ro

  gateway2.example.net:
    image: kaazing/enterprise-gateway:latest
    networks:
      mynet:
    volumes:
      - ./gateway/gateway-config.xml:/kaazing-gateway/conf/gateway-config.xml:ro
      - ./gateway/log4j-config.xml:/kaazing-gateway/conf/log4j-config.xml:ro

  nginx:
    image: nginx:latest
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/favicon.ico:/usr/share/nginx/html/favicon.ico
      - ./nginx/nginx.html:/usr/share/nginx/html/index.html
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./utils/wait-for-files.sh:/wait-for-files.sh
      - myx509:/x509:ro
    networks:
      mynet:
    command: bash -c "/wait-for-files.sh
                         /x509/certs/example.com.crt
                         /x509/certs/example.com.key
                      && nginx -g 'daemon off;'"

volumes:
  myx509:

networks:
  mynet:
    driver: bridge
    ipam:
      config:
        - subnet: 172.30.0.0/16
          gateway: 172.30.0.1

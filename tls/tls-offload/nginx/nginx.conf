user  nginx;
worker_processes  1;

error_log  /var/log/nginx/error.log info;
pid        /var/run/nginx.pid;


events {
    worker_connections  1024;
}


http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    log_format  main  '$remote_addr - $remote_user [$time_local] $http_host "$request" '
                      '$status $body_bytes_sent $http_upgrade $connection_upgrade';

    access_log  /var/log/nginx/access.log  main;

    sendfile        on;

    keepalive_timeout  65;

    upstream lb {
        server gateway1.example.net;
        server gateway2.example.net;
    }

    map $http_upgrade $connection_upgrade {
        default upgrade;
        '' close;
    }

    server {
        listen              80;
        listen              443 ssl;
        server_name         example.com;
        ssl_certificate     /x509/certs/example.com.crt;
        ssl_certificate_key /x509/certs/example.com.key;

        #access_log  /var/log/nginx/log/host.access.log  main;

        max_ranges 0;

        location / {
            root   /usr/share/nginx/html;
            index  index.html index.htm;
        }

        # Websocket connections
        location /echo {
            proxy_pass http://lb;

            proxy_http_version 1.1;
            proxy_set_header X-Real-IP       $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

            proxy_set_header Host            $http_host;
            proxy_set_header Upgrade         $http_upgrade;
            proxy_set_header Connection      $connection_upgrade;

            # Timeout quickly if a backend is down for demo purposes.
            proxy_connect_timeout   5s;
            proxy_next_upstream     error timeout invalid_header http_500;
        }

        # Directory service connections
        location /web {
            proxy_pass http://lb;

            proxy_http_version 1.1;
            proxy_set_header X-Real-IP       $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

            proxy_set_header Host            $http_host;

            # Timeout quickly if a backend is down for demo purposes.
            proxy_connect_timeout   5s;
            proxy_next_upstream     error timeout invalid_header http_500;

            # The following line prevents the Connection header being sent. If commented out, nginx
            # will send "Connection: close" instead.
            # Adding to workaround gateway directory service bug kaazing/tickets#1046
            proxy_set_header Connection "";

        }

        error_page   500 502 503 504  /50x.html;
        location = /50x.html {
            root   /usr/share/nginx/html;
        }

    }

}
